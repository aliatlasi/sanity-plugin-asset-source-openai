{"version":3,"file":"index.js","sources":["../src/components/OpenAIAssetSource.tsx","../src/components/AssetSource.tsx","../src/index.ts"],"sourcesContent":["import {AssetFromSource, AssetSourceComponentProps} from 'sanity'\nimport {Dialog, Flex, Spinner, Stack, TextInput, Button, Label} from '@sanity/ui'\nimport React, {useState} from 'react'\n\nasync function fetchImage(prompt: string, API_KEY: string) {\n  const myHeaders = new Headers()\n  myHeaders.append('Authorization', `Bearer ${API_KEY}`)\n  myHeaders.append('Content-Type', 'application/json')\n\n  const raw = JSON.stringify({\n    prompt,\n    model:\"dall-e-3\",\n    n: 1,\n    size: \"1024x1024\",\n    // eslint-disable-next-line camelcase\n    response_format: 'b64_json',\n  })\n\n  const response = await (\n    await fetch('https://api.openai.com/v1/images/generations', {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n    })\n  ).json()\n  return response.data\n}\n\nexport default function ImagePlugin(props: AssetSourceComponentProps & {API_KEY: string}) {\n  const [prompt, setPrompt] = useState('')\n  const API_KEY = props.API_KEY\n  const [loading, setLoading] = useState(false)\n  const [img, setImg] = useState('')\n\n  async function generateImage() {\n    setLoading(true)\n    const image = await fetchImage(prompt, API_KEY)\n    const newImageValue = `data:image/png;base64,${image[0].b64_json}`\n    setImg(newImageValue)\n    setLoading(false)\n  }\n\n  function oonfirmImage() {\n    const asset: AssetFromSource = {\n      kind: 'url',\n      value: img,\n      assetDocumentProps: {\n        _type: 'sanity.imageAsset',\n        description: prompt,\n      } as any,\n    }\n    props.onSelect([asset])\n  }\n\n  function handleClose() {\n    props.onClose()\n  }\n  function handlePromptChange(event: any) {\n    setPrompt(event.target.value)\n  }\n  return (\n    <>\n      <Dialog\n        id=\"openai-asset-source\"\n        header=\"Select image from Open AI\"\n        onClose={handleClose}\n        open\n        width={4}\n      >\n        <Stack padding={4}>\n          <Flex direction={'column'} gap={2}>\n            <Label>Enter Prompt Text</Label>\n            <TextInput\n              placeholder=\"Cats Driving Boat\"\n              value={prompt}\n              onChange={handlePromptChange}\n              onResize={undefined}\n              onResizeCapture={undefined}\n            />\n          </Flex>\n          <Stack padding={2} />\n\n          {loading && (\n            <Flex justify=\"center\">\n              <Spinner size={3} muted />\n            </Flex>\n          )}\n          {img && <img src={img} alt={prompt} width={512} height={512} />}\n          <Stack padding={2} />\n\n          <Flex gap={4}>\n            {!loading && <Button onClick={generateImage}>Generate</Button>}\n            {img && <Button onClick={oonfirmImage}>Confirm</Button>}\n          </Flex>\n        </Stack>\n      </Dialog>\n    </>\n  )\n}\n","import {SiOpenai} from 'react-icons/si'\r\nimport {AssetSourceComponentProps} from 'sanity'\r\nimport ImagePlugin from './OpenAIAssetSource'\r\n\r\nexport function getPlugin(API_KEY: string) {\r\n  const HOC = (args: AssetSourceComponentProps & {API_KEY: string}) => (\r\n    <ImagePlugin {...args} API_KEY={API_KEY} />\r\n  )\r\n  const OpenAIImagePlugin = {\r\n    name: 'openAI',\r\n    title: 'Open AI Image',\r\n    component: HOC,\r\n    icon: SiOpenai,\r\n  }\r\n  return OpenAIImagePlugin\r\n}\r\n","import {definePlugin} from 'sanity'\r\nimport {getPlugin} from './components/AssetSource'\r\n\r\ninterface OpenaiImageAssetConfig {\r\n  API_KEY: string\r\n}\r\n\r\n/**\r\n * Usage in `sanity.config.ts` (or .js)\r\n *\r\n * ```ts\r\n * import {defineConfig} from 'sanity'\r\n * import {openaiImageAsset} from 'sanity-plugin-asset-source-openai'\r\n *\r\n * export default defineConfig({\r\n *   // ...\r\n *   plugins: [openaiImageAsset()],\r\n * })\r\n * ```\r\n */\r\n\r\nexport const openaiImageAsset = definePlugin<OpenaiImageAssetConfig>(({API_KEY}) => {\r\n  return {\r\n    name: 'Open AI Image',\r\n    form: {\r\n      image: {\r\n        assetSources: (prev) => {\r\n          const OpenAIImagePlugin = getPlugin(API_KEY)\r\n          return [...prev, OpenAIImagePlugin]\r\n        },\r\n      },\r\n    },\r\n  }\r\n})\r\n"],"names":["fetchImage","prompt","API_KEY","myHeaders","Headers","append","raw","JSON","stringify","model","n","size","response_format","response","fetch","method","headers","body","redirect","json","data","ImagePlugin","props","setPrompt","useState","loading","setLoading","img","setImg","generateImage","image","newImageValue","b64_json","oonfirmImage","asset","kind","value","assetDocumentProps","_type","description","onSelect","handleClose","onClose","handlePromptChange","event","target","jsx","Fragment","children","Dialog","id","header","open","width","jsxs","Stack","padding","Flex","direction","gap","Label","TextInput","placeholder","onChange","onResize","onResizeCapture","justify","Spinner","muted","src","alt","height","Button","onClick","getPlugin","HOC","args","OpenAIImagePlugin","name","title","component","icon","SiOpenai","openaiImageAsset","definePlugin","form","assetSources","prev"],"mappings":"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"}